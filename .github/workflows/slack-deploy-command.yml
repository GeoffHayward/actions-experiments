name: Slack Deployment Command

on:
  repository_dispatch:
    types:
      - slack-deploy-command

jobs:
  
  build:
    name: Build Commit
    runs-on: ubuntu-latest
    env:
      PAYLOAD_CONTEXT: ${{ toJson(github.event.client_payload) }}
      BRANCH: ${{ github.event.client_payload.data.text }}
      CHANNEL_ID: ${{ github.event.client_payload.data.channel_id }}
      RESPONSE_URL: ${{  github.event.client_payload.data.response_url }}
      USER_NAME: ${{  github.event.client_payload.data.user_name }}
      TOKEN: ${{  github.event.client_payload.data.token }}


    steps:
      # For debugging
      - name: Print payload values
        run: |
          echo "PAYLOAD_CONTEXT: $PAYLOAD_CONTEXT"
          echo "BRANCH: $BRANCH"
          echo "CHANNEL_ID: $CHANNEL_ID"
          echo "RESPONSE_URL: $RESPONSE_URL"
          echo "USER_NAME: $USER_NAME"
          echo "TOKEN: $TOKEN"

      - name: Acknowladge that the job is running
        uses: muinmomin/webhook-action@v1.0.0
        with:
          url: ${{ RESPONSE_URL }}
          data: `{
            "response_type": "in_channel",
            "text": "Pipeline progress..."
              "attachments": [
                {
                  "text": "Request received"
                }
              ]
          }`

      - name: Identify target
        uses: actions/github-script@v3
        id: find-target
        with:
          script: |
            const environments = {
              C01KGP0B78R: 'debugging'
            }
            if(environments[`${process.env.CHANNEL_ID}`] === undefined) {
              core.setFailed("No target environment has been identifed.")
            } else {
              return environments[`${process.env.CHANNEL_ID}`]
            }

      # if fail send slack message that the env is not known

      - name: Print Identify target
        run: |
          echo ${{steps.find-target.outputs.result}}

      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ env.BRANCH }}

      # if fail send slack message that branch does not exist


      # if successful send slack message that branch is being built
      - name: Send branch not found message to slack
        uses: muinmomin/webhook-action@v1.0.0
        with:
          url: ${{ RESPONSE_URL }}
          data: `{
            "response_type": "in_channel",
            "text": "Pipeline progress..."
              "attachments": [
                {
                  "text": "Building project"
                }
              ]
          }`

      - name: check
        run: git log -1
